name: Build and Deploy Code

on: 
  push: 
    branches: ["main", "another_branch"]
  pull_request:
    branches:
      - "main"
      - "another_way_to_list_branches"

jobs: 
  build:
    environment: 
      name: Testing
    env: 
      # Env secrets set here: https://github.com/amalatak/apiapp/settings/secrets/actions
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PWD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}

    services:
      # Bruh this be taken straight from github
      # https://docs.github.com/en/actions/using-containerized-services/creating-postgresql-service-containers
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PWD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
        ports:
          - 5432:5432
        # Wait for postgres to come up before starting stuffs
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
      # Find at github.com/marketplace/actions/checkout
        uses: actions/checkout@v2
      - name: Install python v3.9
      # Find at actions/setup-python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Update pip
        run: python -m pip install --upgrade pip
      - name: Install all dependencies
        run: pip install -r requirements.txt
      - name: Test with pytest
        run: |
          pip install pytest
          pytest -v

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: Production

    steps:
      - name: pulling git repo
        uses: actions/checkout@v2
      - name: deploying to heroku
        uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}

      # For heroku to run in CI/CD, which is a pain
      # Pull github repo (since starting from scratch)
      # Install heroku CLI
      # heroku login
      # add in remote in git for heroku
      # git push heroku main
      # Instead we're going to go to the github marketplace 

  
